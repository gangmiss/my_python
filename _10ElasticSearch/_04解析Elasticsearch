1.ElasticSearch是一个分布式系统，隐藏了复杂的处理机制
    分片机制：我们不用关心数据是按什么机制分片的，最后放入到哪个分片中
    分片的副本：
    集群发现机制：比如当我们启动一个es进程，当启动第二个es进程时，这个进程作为一个node节点自动就发现集群，并且加入进去
    shard碎片负载均衡：比如我们有10个碎片，集群有3个节点，es会进行均衡的进行分配，以确保每个节点均衡的负载请求


2.扩容：
    垂直：更换
    水平：增加

3.分片和副本机制：
    1.index包含多个shard
    2.每个shard是一个独立的工作单元，承载一定量数据，有完成的建立索引和处理请求能力
    3.增加节点时，shard会自动对node进行负载均衡
    4.每一个文档肯定只存在于一个primary shard以及其对应的replica shard中，不可能存在于多个primary shard
    5.replica shard是primary shard的副本，负责容错以及承担读请求负载
    6.primary shard 在创建索引的时候就固定了，replica shard数量可以随时修改
    7.primary shard默认是5个，默认有10个shard，5个primary shard，5个replica shard
    8.primary shard不能和自己的replica shard放在同一节点上，否则节点宕机，primary shard和副本都丢失，起不到容错的作用，但是可以与其他的primary和replica shard放在同一节点上
        get _cat/health 查看shard分片节点情况，yellow说明警告了
4.数据路由解析：
    通过一个算法能够知道数据存储在哪一个分片上